# This file contains the fastlane.tools configuration for iOS
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# 공통 헬퍼 import
require_relative '../helpers/CommonHelper'

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  # 빌드 아카이브 생성
  desc "Export IPA with provisioning"
  lane :export do |options| 
    gym(
      workspace: options[:workspace], 
      scheme: options[:scheme],
      skip_build_archive: true,
      archive_path: options[:archive_path],
      export_method: "app-store",
      output_directory: options[:output_directory],
      export_options: {
      signingStyle: "manual",
        provisioningProfiles: {
          options[:bundle_id] => options[:provisioning_profile]
        }
      }
    )
  end

  # # TestFlight 배포용
  # desc "Deploy to TestFlight for beta testing"
  # lane :internal_release do |options| 
  #   groups = if options[:groups]
  #            options[:groups].split(',').map(&:strip)
  #          else
  #            ["App Store Connect Users"]
  #          end

  #   upload_to_testflight(
  #     ipa: options[:ipa],
  #     api_key: app_store_connect_api_key(CommonHelper.setup_app_store_api_key(options)),
  #     skip_waiting_for_build_processing: options[:skip_waiting_for_build_processing] || false,
  #     groups: groups,
  #     changelog: options[:changelog] || "Bug fixes and improvements"
  #   )
  # end

  # Internal 배포
  desc "Internal release"
  lane :internal_release do |options|
    # IPA 파일에서 빌드 정보 추출하여 로그에 출력
    CommonHelper.extract_build_info_from_ipa(options)

    # 릴리즈 노트 처리
    CommonHelper.create_ios_metadata_release_notes(options)

    # App Store Connect API 키 설정
    api_key = app_store_connect_api_key(CommonHelper.setup_app_store_api_key(options))

    upload_to_app_store(
      ipa: options[:ipa],
      api_key: api_key,
      skip_metadata: options[:skip_metadata] || false,
      skip_screenshots: options[:skip_screenshots] || true,
      submit_for_review: options[:submit_for_review] || false,
      skip_binary_upload: options[:skip_binary_upload] || false,
      automatic_release: options[:automatic_release] || false,
      skip_app_version_update: options[:skip_app_version_update] || false,
      precheck_include_in_app_purchases: options[:precheck_include_in_app_purchases] || false,
      force: options[:force] || true,
      submission_information: {
        add_id_info_uses_idfa: options[:add_id_info_uses_idfa] || false
      }
    )
  end

  # Production 배포
  desc "Production release"
  lane :production_release do |options|
    # IPA 파일에서 빌드 정보 추출하여 로그에 출력
    CommonHelper.extract_build_info_from_ipa(options)

    # 릴리즈 노트 처리
    CommonHelper.create_ios_metadata_release_notes(options)

    # App Store Connect API 키 설정
    api_key = app_store_connect_api_key(CommonHelper.setup_app_store_api_key(options))

    upload_to_app_store(
      ipa: options[:ipa],
      api_key: api_key,
      skip_metadata: options[:skip_metadata] || false,
      skip_screenshots: options[:skip_screenshots] || true,
      submit_for_review: options[:submit_for_review] || false,
      skip_binary_upload: options[:skip_binary_upload] || false,
      automatic_release: options[:automatic_release] || false,
      skip_app_version_update: options[:skip_app_version_update] || false,
      precheck_include_in_app_purchases: options[:precheck_include_in_app_purchases] || false,
      force: options[:force] || true,
      submission_information: {
        add_id_info_uses_idfa: options[:add_id_info_uses_idfa] || false
      }
    )
  end
end
